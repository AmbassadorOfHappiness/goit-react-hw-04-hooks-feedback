{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","className","style","buttonFeedback","type","name","onClick","nanoid","Section","children","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","values","state","reduce","acc","value","Math","round","countGoodFeedback","prevState","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"mSAceA,EAVS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAChC,OACI,mCACKC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,wBAAQC,UAAWC,IAAMC,eAA+BC,KAAK,SAASC,KAAML,EAAQM,QAASV,EAA7F,SAA+GI,GAAjEO,qBCC/CC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,qCACI,uDACCA,MCYMC,EAfI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC7C,OACI,qCACI,4CACA,+BACI,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,sDAAyBC,EAAzB,cCDDC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OACI,mCACI,4BAAIA,OCiDDC,MA7Cf,WAAgB,IAAD,OACb,EAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAiBQR,EAdCjB,OAAO0B,OAAO,EAAKC,OAAOC,QAAO,SAACC,EAAKC,GAAN,OAAiBD,EAAOC,IAAQ,GAelEZ,EAZkB,SAACD,GAEzB,OAD2Bc,KAAKC,MAAyB,IAAlB,EAAKL,MAAMb,KAAcG,GAWrCgB,CAAkBhB,GAC7C,OAEE,sBAAKb,UAAU,MAAf,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAiBN,QAAS,CAAEgB,OAAMC,UAASC,OAAOjB,gBAZhC,SAAC,GAAY,IAAXS,EAAU,EAAVA,KACX,SAATA,GAAiBe,GAAQ,SAACW,GAAD,OAAeA,EAAY,KAC3C,YAAT1B,GAAoBgB,GAAW,SAACU,GAAD,OAAeA,EAAY,KACjD,QAAT1B,GAAgBiB,GAAO,SAACS,GAAD,OAAeA,EAAY,UAWvC,IAAVjB,EAAe,cAAC,EAAD,CAAcG,QAAQ,sBAEpC,cAAC,EAAD,CACAN,KAAOA,EACPC,QAAUA,EACVC,IAAMA,EACNC,MAAQA,EACRC,mBAAoBA,QCtC9BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,eAAiB,2C","file":"static/js/main.ca5104c3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport style from '../FeedbackOptions/FeedbackOptions.module.css'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    return (\r\n        <>\r\n            {Object.keys(options).map((option) => (\r\n                <button className={style.buttonFeedback} key={nanoid()} type='button' name={option} onClick={onLeaveFeedback}>{option}</button>\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react'\r\n\r\nconst Section = ({ children }) => (\r\n    <>\r\n        <h2>Please leave feedback</h2>\r\n        {children}\r\n    </>\r\n);\r\n\r\nexport default Section;","import React from 'react';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return (\r\n        <>\r\n            <h2>Statistics</h2>\r\n            <ul>\r\n                <li>Good: {good}</li>\r\n                <li>Neutral: {neutral}</li>\r\n                <li>Bad: {bad}</li>\r\n                <li>Total: {total}</li>\r\n                <li>PositivePercentage: {positivePercentage}%</li>\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Statistics;","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    return (\r\n        <>\r\n            <p>{message}</p>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notification;","// import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react'\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\nimport Section from './components/Section/Section'\nimport Statistics from './components/Statistics/Statistics'\nimport Notification from './components/Notification/Notification'\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const totalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => (acc += value), 0);\n  };\n\n  const countGoodFeedback = (total) => {\n    const positivePercentage = Math.round((this.state.good * 100) / total);\n    return positivePercentage;\n  }\n\n  const onLeaveFeedback = ({name}) => {\n    if (name === 'good') setGood((prevState) => prevState + 1);\n    if (name === 'neutral') setNeutral((prevState) => prevState + 1);\n    if (name === 'bad') setBad((prevState) => prevState + 1);\n  };\n\n    const total = totalFeedback();\n    const positivePercentage = countGoodFeedback(total);\n    return (\n\n      <div className=\"App\">\n       <Section>\n        <FeedbackOptions options={{ good, neutral, bad }} onLeaveFeedback={onLeaveFeedback}/>\n        </Section>\n        {total === 0 ? (<Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n          good={ good }\n          neutral={ neutral }\n          bad={ bad }\n          total={ total }\n          positivePercentage={positivePercentage}\n          />\n         )  \n        }\n        </div>\n    )\n  }\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonFeedback\":\"FeedbackOptions_buttonFeedback__ih0Oo\"};"],"sourceRoot":""}